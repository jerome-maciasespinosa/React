npm init
npm install --save-dev webpack webpack-dev-server

créer index.js, App.js, ...

npm install --save react react-dom react-router-dom

ajouter "start": "webpack-dev-server" dans scripts du package.json
créer et remplir webpack.config.js

npm install --save-dev babel-loader babel-core babel-preset-react babel-preset-env
créer babel config ".babelrc" et l'inclure dans webpack.config POUR COMPRENDRE NEXT GEN js
npm install --save-dev css-loader style-loader et inclure dans webpack pour interpreter les imports fichiers css
Ajouter : 
    options: {
        modules: true,
        localIdentName: '[name]__[local]__[hash:base64:5]'
    }
npm install --save-dev postcss-loader
ajouter 3ème loader 
puis installer npm install --save-dev autoprefixer
Ajouter une rule pour le traitement des images 
puis installer npm install --save-dev url-loader 
et l'ajouter à loader en y ajoutant des query params
installer npm install --save-dev file-loader

ajouter chunkFilename: '[id].js', dans output pour gérer le lazy loading et installer npm install --save-dev babel-plugin-syntax-dynamic-import

npm install --save-dev babel-preset-stage-2
npm install --save-dev html-webpack-plugin // Inject the script to the html file

CREER UN FICHIER CONFIG POUR PROD, l'indiquer dans package.json (build)
installer npm install --save-dev rimraf

